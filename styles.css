@import url(general.css);

/* Game board design */
.board {
  /* position: absolute;
  left: 50%;
  top: 50%;
  transform: translateY(-50%) translateX(-50%); */

  display: grid;
  grid-template-columns: repeat(3, auto);
  justify-content: center;
  align-content: center;
  justify-items: center;
  align-items: center;

  margin-top: 1rem;
}

.cell {
  width: var(--cell-size);
  height: var(--cell-size);

  border: 0.1rem solid #111;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;

  transition: all 1s;
}

/* icon of gameplay */
.gameplay-choice {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  margin-top: 8rem;
}

.icon-img {
  width: 4rem;
  height: 4rem;
  cursor: pointer;
}

.icon-text {
  font-size: 1.8rem;
  color: #000;
}

/* Outer border cuts */
.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3) {
  border-top: none;
}

.cell:nth-child(3n + 1) {
  border-left: none;
}

.cell:nth-child(3n) {
  border-right: none;
}

.cell:last-child,
.cell:nth-child(7),
.cell:nth-child(8) {
  border-bottom: none;
}

/* Displaying X */
.x {
  transition: all 0.4s;
}

.cell.x::before,
.cell.x::after {
  content: "";
  position: absolute;
  width: calc(var(--mark-size) * 0.15);
  height: var(--mark-size);
  background-color: #222;
  opacity: 0; /* Initially hide X */
  transition: opacity 0.3s ease-out; /* Add transition for opacity */
}

.cell.x.animate::before,
.cell.x.animate::after {
  opacity: 1; /* Show X with animation */
}

.cell.x::before {
  transform: rotate(45deg);
}

.cell.x::after {
  transform: rotate(135deg);
}

/* Displaying O */
.cell.circle::before,
.cell.circle::after {
  content: "";
  position: absolute;
  border-radius: 50%;
  opacity: 0; /* Initially hide X */
  transition: opacity 0.3s ease-out; /* Add transition for opacity */
}

.cell.circle.animate::before,
.cell.circle.animate::after {
  opacity: 1; /* Show X with animation */
}

.cell.circle::before {
  width: var(--mark-size);
  height: var(--mark-size);
  background-color: #222;
}

.cell.circle::after {
  width: calc(var(--mark-size) * 0.7);
  height: calc(var(--mark-size) * 0.7);
  background-color: #fff;
}

/* styling restart */
.winningMessage {
  opacity: 0;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.9);
  flex-direction: column;
  justify-content: center;
  align-items: center;
  color: #fff;
  font-size: 7rem;
  pointer-events: none; /* Disable pointer events when the message is hidden */
  transition: opacity 0.3s ease-in;
}

.winningMessage button {
  font-size: 5rem;
  background-color: #fff;
  border: 0.1rem solid black;
  padding: 1rem 2rem;
  cursor: pointer;
}

.winningMessage button:hover {
  background-color: #000;
  color: white;
  border-color: white;
}

.winningMessage.show {
  opacity: 1;
  display: flex;
  pointer-events: all;
   /* Enable pointer events when the message is shown */
}
